/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Payroll;

import java.sql.SQLException;
import javax.swing.JTextField;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author LIM
 */
public final class Payroll extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Payroll() {
        initComponents();
        // This place the JFrame at the center of the secreen
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2-getHeight()/2);
        
        lblAdminId.setText(String.valueOf(Main.adminId));
        
        ImageIcon icon = new ImageIcon("src\\Image\\company_logo.png");
        this.setIconImage(icon.getImage());
    }
    
    Connection con = MyConnection.getConnection();
    PreparedStatement pst;
    ResultSet rs;
    
    
    public boolean checkTextField(){
        String empId = tfEmpId.getText();
        String empName = tfName.getText();
        String hoursWorked = tfHoursWorked.getText();
        String hoursOvertime = tfHoursOvertime.getText();
        String holidayPay = tfHolidayPay.getText();
        String bonuses = tfBonuses.getText();
        String basicSalary = tfBasicSalary.getText();
        String hourlyRate = tfHourlyRate.getText();
        String sss = tfSSS.getText();
        String philhealth = tfPhilhealth.getText();
        String pagibig = tfPagibig.getText();
        String uniform = tfUniform.getText();
        String vale = tfVale.getText();
        String grossPay = tfGrossPay.getText();
        String totalDeduction = tfDeduction.getText();
        String netpay = tfNetpay.getText();
        String periodStart = ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).getText();
        String periodEnd = ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).getText();
        
        if(!empId.equals("") && !empName.equals("") && !hoursWorked.equals("") && !hoursOvertime.equals("") && !holidayPay.equals("") &&
                !bonuses.equals("") && !basicSalary.equals("") && !hourlyRate.equals("") && !sss.equals("") && !philhealth.equals("") &&
                !pagibig.equals("") && !uniform.equals("") && !vale.equals("") && !grossPay.equals("") && !totalDeduction.equals("") &&
                !netpay.equals("") && !periodStart.equals("") && !periodEnd.equals("")){
        
            return true;
        }else{
            return false;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnPayroll = new javax.swing.JButton();
        btnEmployee = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnLogout1 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        lblAdminId = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfEmpId = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfHoursWorked = new javax.swing.JTextField();
        tfHoursOvertime = new javax.swing.JTextField();
        tfHolidayPay = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        tfBonuses = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfBasicSalary = new javax.swing.JTextField();
        tfHourlyRate = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tfSSS = new javax.swing.JTextField();
        tfPagibig = new javax.swing.JTextField();
        tfPhilhealth = new javax.swing.JTextField();
        tfVale = new javax.swing.JTextField();
        tfUniform = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        tfGrossPay = new javax.swing.JTextField();
        tfDeduction = new javax.swing.JTextField();
        tfNetpay = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdatePayroll = new javax.swing.JButton();
        dcPeriodStart = new com.toedter.calendar.JDateChooser();
        dcPeriodEnd = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        tfPayrollId = new javax.swing.JTextField();
        btnDeletePayroll = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Payroll");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(253, 675));

        btnPayroll.setBackground(new java.awt.Color(102, 102, 102));
        btnPayroll.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnPayroll.setForeground(new java.awt.Color(255, 255, 255));
        btnPayroll.setText("PAYROLL");

        btnEmployee.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnEmployee.setText("EMPLOYEE");
        btnEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmployeeActionPerformed(evt);
            }
        });

        btnReport.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnReport.setText("REPORT");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        btnRegister.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnRegister.setText("REGISTER");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnLogout.setText("LOGOUT");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnLogout1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnLogout1.setText("HISTORY");
        btnLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout1ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel23.setText("Admin logged in:");

        lblAdminId.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAdminId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnLogout1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPayroll, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAdminId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnPayroll, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnLogout1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 670));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Employee ID:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 30));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Name:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, 30));

        tfEmpId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfEmpIdKeyReleased(evt);
            }
        });
        jPanel3.add(tfEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 226, 30));

        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNameKeyReleased(evt);
            }
        });
        jPanel3.add(tfName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 226, 30));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel1.setText("Period start:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, 30));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Period end:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, -1, 30));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setText("Hours worked:");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setText("Hours overtime:");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setText("Holiday pay:");

        tfHoursWorked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHoursWorkedActionPerformed(evt);
            }
        });
        tfHoursWorked.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfHoursWorkedKeyReleased(evt);
            }
        });

        tfHoursOvertime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHoursOvertimeActionPerformed(evt);
            }
        });
        tfHoursOvertime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfHoursOvertimeKeyReleased(evt);
            }
        });

        tfHolidayPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfHolidayPayKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel21.setText("Bonuses:");

        tfBonuses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBonusesKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel21)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(tfBonuses, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfHolidayPay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfHoursOvertime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfHoursWorked, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHoursWorked, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHoursOvertime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHolidayPay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBonuses, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel9.setText("Basic salary:");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel10.setText("Hourly rate:");

        tfBasicSalary.setEditable(false);
        tfBasicSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBasicSalaryKeyReleased(evt);
            }
        });

        tfHourlyRate.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfBasicSalary, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(tfHourlyRate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 290, -1));

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setText("SSS:");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setText("Pagibig:");

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel14.setText("Philhealth:");

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel15.setText("Vale:");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel16.setText("Uniform:");

        tfPagibig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPagibigActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel17.setText("DEDUCTIONS:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPagibig, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSSS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPhilhealth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfVale, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUniform, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSSS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPagibig, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPhilhealth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfVale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUniform, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 339, 270));

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel18.setText("Total gross pay:");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel19.setText("Total deduction:");

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel20.setText("Net pay:");

        btnCalculate.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnCalculate.setText("CALCULATE");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfGrossPay, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDeduction)
                            .addComponent(tfNetpay))))
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCalculate)
                .addGap(90, 90, 90))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(tfGrossPay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(tfDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(tfNetpay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 290, -1));

        btnSave.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel3.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 510, 77, 30));

        btnUpdatePayroll.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnUpdatePayroll.setText("UPDATE");
        btnUpdatePayroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePayrollActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdatePayroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 560, -1, 30));
        jPanel3.add(dcPeriodStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, 177, 30));
        jPanel3.add(dcPeriodEnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 177, 30));

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel22.setText("Search payroll:");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 30));

        tfPayrollId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPayrollIdKeyReleased(evt);
            }
        });
        jPanel3.add(tfPayrollId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 226, 30));

        btnDeletePayroll.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnDeletePayroll.setText("DELETE");
        btnDeletePayroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePayrollActionPerformed(evt);
            }
        });
        jPanel3.add(btnDeletePayroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 560, 77, 30));

        btnClear.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel3.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 510, 77, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 700, 670));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Confirm to log out?", "Logging out", JOptionPane.YES_NO_OPTION);
        if(x == 0){
            try{
                // Retrieve admin_id and admin_name that will match to the inputted username in login form
                String query2 = "SELECT * FROM `accounts` WHERE id=?";
                pst = con.prepareStatement(query2);
                pst.setString(1, lblAdminId.getText());
                rs = pst.executeQuery();

                if(rs.next()){
                    // Get current time and date
                    Calendar cal = new GregorianCalendar();
                    int month = cal.get(Calendar.MONTH);
                    int year = cal.get(Calendar.YEAR);
                    int day = cal.get(Calendar.DAY_OF_MONTH);

                    int second = cal.get(Calendar.SECOND);
                    int minute = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR);

                    // retrieved data
                    String adminId = rs.getString("id");
                    String adminName = rs.getString("name");
                    String date = ((month+1)+"/"+day+"/"+year);
                    String time = ((hour+00)+":"+(minute+00)+":"+(second+00));

                    // for description
                    String desc = "Logged out the system";

                    // Insert retrieved data into account login
                    String query3 = "INSERT INTO `account_login`(`admin_id`, `admin_name`, `login_date`, `login_time`, `description`) VALUES (?, ?, ?, ?, ?)";
                    pst = con.prepareStatement(query3);
                    pst.setString(1, adminId);
                    pst.setString(2, adminName);
                    pst.setString(3, date);
                    pst.setString(4, time);
                    pst.setString(5, desc);

                    pst.execute();
                }
            }catch(SQLException e){
            }
        LoginForm loginForm = new LoginForm();
        this.hide();
        loginForm.show();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void tfEmpIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEmpIdKeyReleased
        
        if(!tfEmpId.getText().equals("")){
            try{
                String query = "SELECT * FROM employee_info WHERE id=?";

                pst = con.prepareStatement(query);
                pst.setString(1, tfEmpId.getText());
                rs = pst.executeQuery();

                if(rs.next()){
                    String fname = rs.getString("firstname");
                    String lname = rs.getString("lastname");
                    String basicSalary = rs.getString("basic_salary");

                    tfName.setText(fname+" "+lname);
                    tfBasicSalary.setText(basicSalary);
                    String text = tfBasicSalary.getText();

                    double toDouble = Double.parseDouble(basicSalary);
                    double hourlyRate = (toDouble/8);

                    tfHourlyRate.setText(String.valueOf(hourlyRate));
                }
            }catch(SQLException ex){
            
            }    
        }else{
            tfPayrollId.setText("");
            tfEmpId.setText("");
            tfName.setText("");
            tfHoursWorked.setText("");
            tfHoursOvertime.setText("");
            tfHolidayPay.setText("");
            tfBonuses.setText("");
            tfBasicSalary.setText("");
            tfHourlyRate.setText("");
            tfSSS.setText("");
            tfPhilhealth.setText("");
            tfPagibig.setText("");
            tfUniform.setText("");
            tfVale.setText("");
            tfGrossPay.setText("");
            tfDeduction.setText("");
            tfNetpay.setText("");
            ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).setText("");
            ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).setText("");
        }
    }//GEN-LAST:event_tfEmpIdKeyReleased

    private void btnEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmployeeActionPerformed
        Employee empForm = new Employee();
        this.hide();
        empForm.show();
    }//GEN-LAST:event_btnEmployeeActionPerformed

    private void tfHoursWorkedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHoursWorkedKeyReleased
    }//GEN-LAST:event_tfHoursWorkedKeyReleased

    private void tfHoursOvertimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHoursOvertimeKeyReleased
    }//GEN-LAST:event_tfHoursOvertimeKeyReleased

    private void tfHolidayPayKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHolidayPayKeyReleased
        
    }//GEN-LAST:event_tfHolidayPayKeyReleased

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        
        // Calculate grosspay
        double basicSalary = Double.parseDouble(tfBasicSalary.getText());
        double hourlyRate = (basicSalary/8);
        
        double hoursWorked = Integer.parseInt(tfHoursWorked.getText());
        double hoursOvertime = Integer.parseInt(tfHoursOvertime.getText());
        double holidayPay = Integer.parseInt(tfHolidayPay.getText());
        double bonuses = Integer.parseInt(tfBonuses.getText());
        
        // formula for grosspay
        double grossPay = (((hoursWorked+hoursOvertime)*hourlyRate)+(holidayPay+bonuses));
        
        tfGrossPay.setText(String.valueOf(grossPay));
        
        // calculate total deduction
        double sss = Double.parseDouble(tfSSS.getText());
        double philhealth = Double.parseDouble(tfPhilhealth.getText());
        double pagibig = Double.parseDouble(tfPagibig.getText());
        double vale = Double.parseDouble(tfVale.getText());
        double uniform = Double.parseDouble(tfUniform.getText());
        
        double totalDeduction = (sss + philhealth + pagibig + vale + uniform);
        tfDeduction.setText(String.valueOf(totalDeduction));
        
        double netpay = (grossPay - totalDeduction);
        tfNetpay.setText(String.valueOf(netpay));
        
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void tfHoursWorkedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHoursWorkedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHoursWorkedActionPerformed

    private void tfHoursOvertimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHoursOvertimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHoursOvertimeActionPerformed

    private void tfPagibigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPagibigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPagibigActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        Register regForm = new Register();
        this.hide();
        regForm.show();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        Report reportForm = new Report();
        reportForm.show();
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout1ActionPerformed
        History historyForm = new History();
        this.hide();
        historyForm.show();
    }//GEN-LAST:event_btnLogout1ActionPerformed

    private void tfBasicSalaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBasicSalaryKeyReleased
     
          
    }//GEN-LAST:event_tfBasicSalaryKeyReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to save payroll?", "Save data", JOptionPane.YES_NO_OPTION);
        if(x == 0){
            if(checkTextField() == true){
            
                try{
                    String query1  = "SELECT * FROM payroll WHERE employee_id=? AND period_start=? AND period_end=?";
                    pst = con.prepareStatement(query1);
                    pst.setString(1, tfEmpId.getText());
                    pst.setString(2, ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).getText());
                    pst.setString(3, ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).getText());
                    rs = pst.executeQuery();

                    if(rs.next()){
                        JOptionPane.showMessageDialog(null, "Payroll already exists in the database.");
                    }
                    else{
                        try{
                            String query = "INSERT INTO `payroll`(`admin_id`, `employee_id`, `employee_name`, `hours_worked`, `hours_overtime`, `holiday_pay`,  `bonuses`,`daily_rate`, `hourly_rate`, `sss`, `philhealth`, `pagibig`, `vale`, `uniform`, `grosspay`, `total_deduction`, `netpay`, `period_start`, `period_end`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            pst = con.prepareStatement(query);
                            pst.setString(1, lblAdminId.getText());
                            pst.setString(2, tfEmpId.getText());
                            pst.setString(3, tfName.getText());
                            pst.setString(4, tfHoursWorked.getText());
                            pst.setString(5, tfHoursOvertime.getText());
                            pst.setString(6, tfHolidayPay.getText());
                            pst.setString(7, tfBonuses.getText());
                            pst.setDouble(8, Double.parseDouble(tfBasicSalary.getText()));
                            pst.setDouble(9, Double.parseDouble(tfHourlyRate.getText()));
                            pst.setString(10, tfSSS.getText());
                            pst.setString(11, tfPhilhealth.getText());
                            pst.setString(12, tfPagibig.getText());
                            pst.setString(13, tfVale.getText());
                            pst.setString(14, tfUniform.getText());
                            pst.setString(15, tfGrossPay.getText());
                            pst.setString(16, tfDeduction.getText());
                            pst.setString(17, tfNetpay.getText());
                            pst.setString(18, ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).getText());
                            pst.setString(19, ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).getText());

                            pst.execute();
                            JOptionPane.showMessageDialog(null, "Payroll saved successfully!");

                            try{
                                // Retrieve admin_id and admin_name that will match to the inputted username in login form
                                String query2 = "SELECT * FROM `accounts` WHERE id=?";
                                pst = con.prepareStatement(query2);
                                pst.setString(1, lblAdminId.getText());
                                rs = pst.executeQuery();

                                if(rs.next()){
                                    // Get current time and date
                                    Calendar cal = new GregorianCalendar();
                                    int month = cal.get(Calendar.MONTH);
                                    int year = cal.get(Calendar.YEAR);
                                    int day = cal.get(Calendar.DAY_OF_MONTH);

                                    int second = cal.get(Calendar.SECOND);
                                    int minute = cal.get(Calendar.MINUTE);
                                    int hour = cal.get(Calendar.HOUR);

                                    // retrieved data
                                    String adminId = rs.getString("id");
                                    String adminName = rs.getString("name");
                                    String date = ((month+1)+"/"+day+"/"+year);
                                    String time = ((hour+00)+":"+(minute+00)+":"+(second+00));

                                    // for description
                                    String desc = "Payroll saved. Emp name: "+tfName.getText();

                                    // Insert retrieved data into account login
                                    String query3 = "INSERT INTO `account_login`(`admin_id`, `admin_name`, `login_date`, `login_time`, `description`) VALUES (?, ?, ?, ?, ?)";
                                    pst = con.prepareStatement(query3);
                                    pst.setString(1, adminId);
                                    pst.setString(2, adminName);
                                    pst.setString(3, date);
                                    pst.setString(4, time);
                                    pst.setString(5, desc);

                                    pst.execute();
                                }

                            }catch(SQLException es){

                            }           
                        }catch(HeadlessException | NumberFormatException | SQLException e){

                        }
                    }
                }catch(HeadlessException | SQLException e){

                }
            }else{
                JOptionPane.showMessageDialog(null, "Please complete the payroll");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tfPayrollIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPayrollIdKeyReleased
        String search = tfPayrollId.getText();
        
        if(!search.equals("")){
            try{
                String query = "SELECT * FROM payroll WHERE id=?";
                pst = con.prepareStatement(query);
                pst.setString(1, tfPayrollId.getText());
                rs = pst.executeQuery();

                if(rs.next()){

                    String empId = rs.getString("employee_id");
                    tfEmpId.setText(empId);

                    String name = rs.getString("employee_name");
                    tfName.setText(name);

                    String hoursWorked = rs.getString("hours_worked");
                    tfHoursWorked.setText(hoursWorked);

                    String hoursOvertime = rs.getString("hours_overtime");
                    tfHoursOvertime.setText(hoursOvertime);

                    String holidayPay = rs.getString("holiday_pay");
                    tfHolidayPay.setText(holidayPay);

                    String bonuses = rs.getString("bonuses");
                    tfBonuses.setText(bonuses);

                    String dailyRate = rs.getString("daily_rate");
                    tfBasicSalary.setText(dailyRate);

                    String hourlyRate = rs.getString("hourly_rate");
                    tfHourlyRate.setText(hourlyRate);

                    String sss = rs.getString("sss");
                    tfSSS.setText(sss);

                    String philhealth = rs.getString("philhealth");
                    tfPhilhealth.setText(philhealth);

                    String pagibig = rs.getString("pagibig");
                    tfPagibig.setText(pagibig);

                    String vale = rs.getString("vale");
                    tfVale.setText(vale);

                    String uniform = rs.getString("uniform");
                    tfUniform.setText(uniform);

                    String grossPay = rs.getString("grosspay");
                    tfGrossPay.setText(grossPay);

                    String totalDeduction = rs.getString("total_deduction");
                    tfDeduction.setText(totalDeduction);

                    String netpay = rs.getString("netpay");
                    tfNetpay.setText(netpay);

                    String periodStart = rs.getString("period_start");
                    ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).setText(periodStart);

                    String periodEnd = rs.getString("period_end");
                    ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).setText(periodEnd);
                }
            }catch(Exception e){
            
            }    
        }else{
            tfEmpId.setText("");
            tfName.setText("");
            tfHoursWorked.setText("");
            tfHoursOvertime.setText("");
            tfHolidayPay.setText("");
            tfBonuses.setText("");
            tfBasicSalary.setText("");
            tfHourlyRate.setText("");
            tfSSS.setText("");
            tfPhilhealth.setText("");
            tfPagibig.setText("");
            tfUniform.setText("");
            tfVale.setText("");
            tfGrossPay.setText("");
            tfDeduction.setText("");
            tfNetpay.setText("");
            ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).setText("");
            ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).setText("");
        }
    }//GEN-LAST:event_tfPayrollIdKeyReleased

    private void btnUpdatePayrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePayrollActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update payroll?", "Update payroll", JOptionPane.YES_NO_OPTION);
        if(x == 0){
            if(checkTextField() == true){
                try{
                    String payrollId = tfPayrollId.getText();
                    String adminId = lblAdminId.getText();
                    String empId = tfEmpId.getText();
                    String empName = tfName.getText();
                    String hoursWorked = tfHoursWorked.getText();
                    String hoursOvertime = tfHoursOvertime.getText();
                    String holidayPay = tfHolidayPay.getText();
                    String bonuses = tfBonuses.getText();
                    String basicSalary = tfBasicSalary.getText();
                    String hourlyRate = tfHourlyRate.getText();
                    String sss = tfSSS.getText();
                    String philhealth = tfPhilhealth.getText();
                    String pagibig = tfPagibig.getText();
                    String uniform = tfUniform.getText();
                    String vale = tfVale.getText();
                    String grossPay = tfGrossPay.getText();
                    String totalDeduction = tfDeduction.getText();
                    String netpay = tfNetpay.getText();
                    String periodStart = ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).getText();
                    String periodEnd = ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).getText();

                    String query = "UPDATE `payroll` SET `id`='"+payrollId+"',`admin_id`='"+adminId+"',`employee_id`='"+empId+"',`employee_name`='"+empName+"',"
                            + "`hours_worked`='"+hoursWorked+"',`hours_overtime`='"+hoursOvertime+"',`holiday_pay`='"+holidayPay+"',`bonuses`='"+bonuses+"',"
                            + "`daily_rate`='"+basicSalary+"',`hourly_rate`='"+hourlyRate+"',`sss`='"+sss+"',`philhealth`='"+philhealth+"',`pagibig`='"+pagibig+"',"
                            + "`vale`='"+vale+"',`uniform`='"+uniform+"',`grosspay`='"+grossPay+"',`total_deduction`='"+totalDeduction+"',`netpay`='"+netpay+"',"
                            + "`period_start`='"+periodStart+"',`period_end`='"+periodEnd+"' WHERE id='"+payrollId+"'";

                    pst = con.prepareStatement(query);
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Payoll updated successfully!");

                    try{
                        // Retrieve admin_id and admin_name that will match to the inputted username in login form
                        String query2 = "SELECT * FROM `accounts` WHERE id=?";
                        pst = con.prepareStatement(query2);
                        pst.setString(1, lblAdminId.getText());
                        rs = pst.executeQuery();

                        if(rs.next()){
                            // Get current time and date
                            Calendar cal = new GregorianCalendar();
                            int month = cal.get(Calendar.MONTH);
                            int year = cal.get(Calendar.YEAR);
                            int day = cal.get(Calendar.DAY_OF_MONTH);

                            int second = cal.get(Calendar.SECOND);
                            int minute = cal.get(Calendar.MINUTE);
                            int hour = cal.get(Calendar.HOUR);

                            // retrieved data
                            String adminIdNo = rs.getString("id");
                            String adminName = rs.getString("name");
                            String date = ((month+1)+"/"+day+"/"+year);
                            String time = ((hour+00)+":"+(minute+00)+":"+(second+00));

                            // for description
                            String desc = "Payroll updated. Emp name: "+tfName.getText();

                            // Insert retrieved data into account login
                            String query3 = "INSERT INTO `account_login`(`admin_id`, `admin_name`, `login_date`, `login_time`, `description`) VALUES (?, ?, ?, ?, ?)";
                            pst = con.prepareStatement(query3);
                            pst.setString(1, adminIdNo);
                            pst.setString(2, adminName);
                            pst.setString(3, date);
                            pst.setString(4, time);
                            pst.setString(5, desc);

                            pst.execute();
                        }
                    }catch(Exception e){

                    } 

                }catch(Exception e){

                }
            }else{
                JOptionPane.showMessageDialog(null, "Please complete the payroll.");
            }
        }
    }//GEN-LAST:event_btnUpdatePayrollActionPerformed

    private void btnDeletePayrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePayrollActionPerformed
        if(!(tfPayrollId.getText()).equals("")){    
            int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete payroll?", "Delete payroll", JOptionPane.YES_NO_OPTION);
            if(x == 0) {
                try{
                    String query = "DELETE FROM `payroll` WHERE id=?";

                    pst = con.prepareStatement(query);
                    pst.setString(1, tfPayrollId.getText());
                    pst.execute();

                    try{
                        // Retrieve admin_id and admin_name that will match to the inputted username in login form
                        String query2 = "SELECT * FROM `accounts` WHERE id=?";
                        pst = con.prepareStatement(query2);
                        pst.setString(1, lblAdminId.getText());
                        rs = pst.executeQuery();

                        if(rs.next()){
                            // Get current time and date
                            Calendar cal = new GregorianCalendar();
                            int month = cal.get(Calendar.MONTH);
                            int year = cal.get(Calendar.YEAR);
                            int day = cal.get(Calendar.DAY_OF_MONTH);

                            int second = cal.get(Calendar.SECOND);
                            int minute = cal.get(Calendar.MINUTE);
                            int hour = cal.get(Calendar.HOUR);

                            // retrieved data
                            String adminIdNo = rs.getString("id");
                            String adminName = rs.getString("name");
                            String date = ((month+1)+"/"+day+"/"+year);
                            String time = ((hour+00)+":"+(minute+00)+":"+(second+00));

                            // for description
                            String desc = "Payroll deleted. Emp name: "+tfName.getText();

                            // Insert retrieved data into account login
                            String query3 = "INSERT INTO `account_login`(`admin_id`, `admin_name`, `login_date`, `login_time`, `description`) VALUES (?, ?, ?, ?, ?)";
                            pst = con.prepareStatement(query3);
                            pst.setString(1, adminIdNo);
                            pst.setString(2, adminName);
                            pst.setString(3, date);
                            pst.setString(4, time);
                            pst.setString(5, desc);

                            pst.execute();

                        }

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }

                    tfEmpId.setText("");
                    tfName.setText("");
                    tfPayrollId.setText("");
                    ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).setText("");
                    ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).setText("");
                    tfHoursWorked.setText("");
                    tfHoursOvertime.setText("");
                    tfHolidayPay.setText("");
                    tfBonuses.setText("");
                    tfBasicSalary.setText("");
                    tfHourlyRate.setText("");
                    tfSSS.setText("");
                    tfPhilhealth.setText("");
                    tfPagibig.setText("");
                    tfUniform.setText("");
                    tfVale.setText("");
                    tfGrossPay.setText("");
                    tfDeduction.setText("");
                    tfNetpay.setText("");

                    JOptionPane.showMessageDialog(null, "Payroll deleted successfully!");

                }catch(Exception e){

                }
            }   
        }else{
            JOptionPane.showMessageDialog(null, "No payroll is displayed.");
        } 
    }//GEN-LAST:event_btnDeletePayrollActionPerformed

    private void tfNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameKeyReleased
        try{
            String query = "SELECT * FROM employee_info WHERE firstname=?";
            
            pst = con.prepareStatement(query);
            pst.setString(1, tfName.getText());
            rs = pst.executeQuery();
            
            if(rs.next()){
                String empId = rs.getString("id");
                
                tfEmpId.setText(empId);
            }
            else{
                tfEmpId.setText("");
            }
        }catch(SQLException ex){
            
        }
    }//GEN-LAST:event_tfNameKeyReleased

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        tfEmpId.setText("");
        tfName.setText("");
        tfPayrollId.setText("");
        ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).setText("");
        ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).setText("");
        tfHoursWorked.setText("");
        tfHoursOvertime.setText("");
        tfHolidayPay.setText("");
        tfBonuses.setText("");
        tfBasicSalary.setText("");
        tfHourlyRate.setText("");
        tfSSS.setText("");
        tfPhilhealth.setText("");
        tfPagibig.setText("");
        tfUniform.setText("");
        tfVale.setText("");
        tfGrossPay.setText("");
        tfDeduction.setText("");
        tfNetpay.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void tfBonusesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBonusesKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBonusesKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payroll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeletePayroll;
    private javax.swing.JButton btnEmployee;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnLogout1;
    private javax.swing.JButton btnPayroll;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdatePayroll;
    private com.toedter.calendar.JDateChooser dcPeriodEnd;
    private com.toedter.calendar.JDateChooser dcPeriodStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel lblAdminId;
    private javax.swing.JTextField tfBasicSalary;
    private javax.swing.JTextField tfBonuses;
    private javax.swing.JTextField tfDeduction;
    private javax.swing.JTextField tfEmpId;
    private javax.swing.JTextField tfGrossPay;
    private javax.swing.JTextField tfHolidayPay;
    private javax.swing.JTextField tfHourlyRate;
    private javax.swing.JTextField tfHoursOvertime;
    private javax.swing.JTextField tfHoursWorked;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfNetpay;
    private javax.swing.JTextField tfPagibig;
    private javax.swing.JTextField tfPayrollId;
    private javax.swing.JTextField tfPhilhealth;
    private javax.swing.JTextField tfSSS;
    private javax.swing.JTextField tfUniform;
    private javax.swing.JTextField tfVale;
    // End of variables declaration//GEN-END:variables
}
