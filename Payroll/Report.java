/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Payroll;

import com.itextpdf.io.font.FontConstants;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.element.Text;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.apache.pdfbox.multipdf.PDFMergerUtility;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author LIM
 */
public class Report extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Report() {
        
        initComponents();
        // This place the JFrame at the center of the secreen
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2-getHeight()/2);
        
        lblAdminId.setText(String.valueOf(Main.adminId));
        
        openPdf("");
        
        ImageIcon icon = new ImageIcon("src\\Image\\company_logo.png");
        this.setIconImage(icon.getImage());
        
    }
    
    Connection con = MyConnection.getConnection();
    PreparedStatement pst;
    ResultSet rs;
    
    /**
     * This method is called from within the constructor to initialize the form.WARNING: Do NOT modify this code.
     * The content of this method is always
 regenerated by the Form Editor.
     * @param filePath
     */
    @SuppressWarnings("unchecked")
    
    public void openPdf(String filePath){
            // build a controller
            SwingController controller = new SwingController();

            // Build a SwingViewFactory configured with the controller
            SwingViewBuilder factory = new SwingViewBuilder(controller);

            // Use the factory to build a JPanel that is pre-configured
            //with a complete, active Viewer UI.
            JPanel viewerComponentPanel = factory.buildViewerPanel();
            

            // add copy keyboard command
            ComponentKeyBinding.install(controller, viewerComponentPanel);
            

            // add interactive mouse link annotation support via callback
            controller.getDocumentViewController().setAnnotationCallback(
                  new org.icepdf.ri.common.MyAnnotationCallback(
                         controller.getDocumentViewController()));
            
            // set the size and add in JPanel
            viewerComponentPanel.setSize(956, 657);
            viewerComponentPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            pdfViewer.add(viewerComponentPanel);
            
            // Open a PDF document to view
            controller.openDocument(filePath);
            
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dcPeriodStart = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        dcPeriodEnd = new com.toedter.calendar.JDateChooser();
        btnGenerateSalaryStatement = new javax.swing.JButton();
        btnGeneratePayslip = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblAdminId = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        pdfViewer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report");
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 700));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(257, 600));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel1.setText("Period start:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel2.setText("Period end:");

        btnGenerateSalaryStatement.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnGenerateSalaryStatement.setText("Generate Salary Statement");
        btnGenerateSalaryStatement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateSalaryStatementActionPerformed(evt);
            }
        });

        btnGeneratePayslip.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnGeneratePayslip.setText("Generate Payslip");
        btnGeneratePayslip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePayslipActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel3.setText("Select payroll period:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel4.setText("Admin logged in: ");

        lblAdminId.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAdminId, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(dcPeriodStart, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(dcPeriodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGeneratePayslip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGenerateSalaryStatement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(btnBack)))
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAdminId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcPeriodStart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcPeriodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(btnGeneratePayslip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGenerateSalaryStatement, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(53, 53, 53))
        );

        pdfViewer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pdfViewer.setPreferredSize(new java.awt.Dimension(284, 640));

        javax.swing.GroupLayout pdfViewerLayout = new javax.swing.GroupLayout(pdfViewer);
        pdfViewer.setLayout(pdfViewerLayout);
        pdfViewerLayout.setHorizontalGroup(
            pdfViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 953, Short.MAX_VALUE)
        );
        pdfViewerLayout.setVerticalGroup(
            pdfViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pdfViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 957, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                    .addComponent(pdfViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateSalaryStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateSalaryStatementActionPerformed
        
        String periodStart = ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).getText();
        String periodEnd = ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).getText();
        
        if(!periodStart.equals("") && !periodEnd.equals("")){
            try{
                String query = "SELECT * FROM `payroll` WHERE period_start=? AND period_end=?";
                pst = con.prepareStatement(query);
                pst.setString(1, periodStart);
                pst.setString(2, periodEnd);
                rs = pst.executeQuery();

                    // Choose location where payslip to be saved
                    JFileChooser dialog = new JFileChooser();
                    dialog.setSelectedFile(new File("Salary Statement "+periodStart+" - "+periodEnd+".pdf"));
                    int dialogResult = dialog.showSaveDialog(null);

                    if (dialogResult == JFileChooser.APPROVE_OPTION){
                        String filePath = dialog.getSelectedFile().getPath();

                        // Creating a PdfWriter       
                        PdfWriter writer = new PdfWriter(filePath);           

                        // Creating a PdfDocument       
                        PdfDocument pdf = new PdfDocument(writer);
                        // change pdf page orientation to landscape
                        pdf.setDefaultPageSize(PageSize.A3.rotate());

                        // Creating a Document        
                        Document document = new Document(pdf);  
                        
                        // For header
                        String companyName = "JE PRIME CONSTRUCTION\n";
                        String payslipText = "Salary Statement\n";
                        String period = " " +periodStart+" - "+periodEnd+"";
                        
                        Text text1 = new Text(companyName).setFontSize(15);
                        Text text2 = new Text(payslipText).setFontSize(13);
                        Text text3 = new Text(period).setFontSize(13);
                        
                        // Creating an Area Break    
                        Paragraph header = new Paragraph()
                                .add(text1)
                                .add(text2)
                                .add(text3);
                        
                        // Creating a table       
                        float [] pointColumnWidths = {50F, 50F, 50F, 300F, 50F, 50F, 50F, 50F, 50F, 150F, 50F, 50F, 50F, 150F, 150F, 150F};   
                        Table table = new Table(pointColumnWidths);

                        // Adding cells to the table       
                        table.addCell(new Cell().add("id"));       
                        table.addCell(new Cell().add("admin_id"));       
                        table.addCell(new Cell().add("emp_id"));       
                        table.addCell(new Cell().add("emp_name"));       
                        table.addCell(new Cell().add("hours_worked"));       
                        table.addCell(new Cell().add("hours_worked"));  
                        table.addCell(new Cell().add("hours_overtime"));       
                        table.addCell(new Cell().add("holiday_pay"));       
                        table.addCell(new Cell().add("bonuses"));       
                        table.addCell(new Cell().add("daily_rate"));       
                        table.addCell(new Cell().add("hourly_rate"));
                        table.addCell(new Cell().add("grosspay"));   
                        table.addCell(new Cell().add("total_deduction"));
                        table.addCell(new Cell().add("netpay"));       
                        table.addCell(new Cell().add("period_start"));       
                        table.addCell(new Cell().add("period_end")); 

                        while(rs.next()){
                            String payrollId = String.valueOf(rs.getInt("id"));
                            String adminId = rs.getString("admin_id");
                            String empId = rs.getString("employee_id");
                            String empName = rs.getString("employee_name");
                            String hoursWorked = rs.getString("hours_worked");
                            String hoursOvertime = rs.getString("hours_overtime");
                            String holidayPay = rs.getString("holiday_pay");
                            String bonuses = rs.getString("bonuses");
                            String dailyRate = rs.getString("daily_rate");
                            String hourlyRate = rs.getString("hourly_rate");
            //                String sss = rs.getString("sss");
            //                String philhealth = rs.getString("philhealth");
            //                String pagibig = rs.getString("pagibig");
            //                String vale = rs.getString("vale");
            //                String uniform = rs.getString("uniform");
                            String grossPay = rs.getString("grosspay");
                            String totalDeduction = rs.getString("total_deduction");
                            String netpay = rs.getString("netpay");
                            String ps = rs.getString("period_start");
                            String pe = rs.getString("period_end");

                            // Adding cells to the table       
                            table.addCell(new Cell().add(payrollId));       
                            table.addCell(new Cell().add(adminId));       
                            table.addCell(new Cell().add(empId));       
                            table.addCell(new Cell().add(empName));       
                            table.addCell(new Cell().add(hoursWorked));       
                            table.addCell(new Cell().add(hoursOvertime));  
                            table.addCell(new Cell().add(holidayPay));       
                            table.addCell(new Cell().add(bonuses));       
                            table.addCell(new Cell().add(bonuses));       
                            table.addCell(new Cell().add(dailyRate));       
                            table.addCell(new Cell().add(hourlyRate));   
                            table.addCell(new Cell().add(grossPay));   
                            table.addCell(new Cell().add(totalDeduction));
                            table.addCell(new Cell().add(netpay));       
                            table.addCell(new Cell().add(ps));       
                            table.addCell(new Cell().add(pe)); 

                        }
                        document.add(header);
                        // Adding Table to document        
                        document.add(table);
                        
                        // Closing the document       
                        document.close();

                        // removes all the components of this container
                        pdfViewer.removeAll();
                        // displaying in pdf viewer
                        openPdf(filePath);

                        JOptionPane.showMessageDialog(null, "Salary Statement Generated");

                        try{
                            // Retrieve admin_id and admin_name that will match to the inputted username in login form
                            String query3 = "SELECT * FROM `accounts` WHERE id=?";
                            pst = con.prepareStatement(query3);
                            pst.setString(1, lblAdminId.getText());
                            rs = pst.executeQuery();

                            if(rs.next()){
                                // Get current time and date
                                Calendar cal = new GregorianCalendar();
                                int month = cal.get(Calendar.MONTH);
                                int year = cal.get(Calendar.YEAR);
                                int day = cal.get(Calendar.DAY_OF_MONTH);

                                int second = cal.get(Calendar.SECOND);
                                int minute = cal.get(Calendar.MINUTE);
                                int hour = cal.get(Calendar.HOUR);

                                // retrieved data
                                String adminId = rs.getString("id");
                                String adminName1 = rs.getString("name");
                                String date = ((month+1)+"/"+day+"/"+year);
                                String time = ((hour+00)+":"+(minute+00)+":"+(second+00));

                                // for description
                                String desc = "Salary Statement generated for "+periodStart+" - "+periodEnd;

                                // Insert retrieved data into account login
                                String query4 = "INSERT INTO `account_login`(`admin_id`, `admin_name`, `login_date`, `login_time`, `description`) VALUES (?, ?, ?, ?, ?)";
                                pst = con.prepareStatement(query4);
                                pst.setString(1, adminId);
                                pst.setString(2, adminName1);
                                pst.setString(3, date);
                                pst.setString(4, time);
                                pst.setString(5, desc);

                                pst.execute();
                            }
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e);
                        }  
                    } 
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "No payroll exists for the selected payroll period.");;
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select payroll period");
        }


    }//GEN-LAST:event_btnGenerateSalaryStatementActionPerformed

    private void btnGeneratePayslipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePayslipActionPerformed
        String periodStart = ((JTextField)dcPeriodStart.getDateEditor().getUiComponent()).getText();
        String periodEnd = ((JTextField)dcPeriodEnd.getDateEditor().getUiComponent()).getText();
        
        if(!periodStart.equals("") && !periodEnd.equals("")){
            try{
                //Retrieve admin name that will match the id logged in
                String query2 = "SELECT * FROM accounts WHERE id=?";
                pst = con.prepareStatement(query2);
                pst.setString(1, lblAdminId.getText());
                rs = pst.executeQuery();
                rs.next();
                String adminName = rs.getString("name");
                
                String query = "SELECT * FROM `payroll` WHERE period_start=? AND period_end=?";
                pst = con.prepareStatement(query);
                pst.setString(1, periodStart);
                pst.setString(2, periodEnd);
                rs = pst.executeQuery();
                
                // Choose location where payslip to be saved
                JFileChooser dialog = new JFileChooser();
                dialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                int dialogResult = dialog.showSaveDialog(null);
                File path = dialog.getSelectedFile();
                int y = 0;    
                
                    if (dialogResult == JFileChooser.APPROVE_OPTION){

                        while(rs.next()){
                            String adminId = rs.getString("admin_id");
                            String empName = rs.getString("employee_name");
                            String hoursWorked = rs.getString("hours_worked");
                            String hoursOvertime = rs.getString("hours_overtime");
                            String holidayPay = rs.getString("holiday_pay");
                            String bonuses = rs.getString("bonuses");
                            String dailyRate = rs.getString("daily_rate");
                            String hourlyRate = rs.getString("hourly_rate");
                            String sss = rs.getString("sss");
                            String philhealth = rs.getString("philhealth");
                            String pagibig = rs.getString("pagibig");
                            String vale = rs.getString("vale");
                            String uniform = rs.getString("uniform");
                            String grossPay = rs.getString("grosspay");
                            String totalDeduction = rs.getString("total_deduction");
                            String netpay = rs.getString("netpay");
                            String ps = rs.getString("period_start");
                            String pe = rs.getString("period_end");

                            try{
                                // Creating a PdfWriter
                                PdfWriter writer = new PdfWriter(path+"\\"+empName+" "+ps+"-"+pe+".pdf");

                                // Creating a PdfDocument
                                PdfDocument pdf = new PdfDocument(writer);

                                // Creating a Document
                                Document document = new Document(pdf);
                                PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);
                                PdfFont boldFont = PdfFontFactory.createFont(FontConstants.TIMES_BOLD);

                                String companyName = "JE PRIME CONSTRUCTION\n";
                                String payslipText = "      Payslip\n";
                                String period = " " +ps+" - "+pe+"\n";
                                String name =     "     "+empName+"\n";

                                String grosspayDetails =  "-------------------------------------------\n"
                                        + "No. of hours worked: "+hoursWorked+"\n"
                                        + "No. of hous overtime: "+hoursOvertime+"\n"
                                        + "Holiday pay: "+holidayPay+"\n"
                                        + "Bonuses: "+bonuses+"\n"
                                        + "Basic salary: "+ dailyRate+"\n"
                                        + "Hourly rate: "+hourlyRate+"\n"
                                        + "--------------------------------------------\n"
                                        + "Total gross pay: "+grossPay+"\n"
                                        + "--------------------------------------------\n";
                                String deductionDetails = "Deductions:\n"
                                        + "SSS: "+sss+"\n"
                                        + "Pagibig: "+pagibig+"\n"
                                        + "Philhealth: "+philhealth+"\n"
                                        + "Vale: "+vale+"\n"
                                        + "Uniform fee: "+uniform+"\n"
                                        + "--------------------------------------------\n"
                                        + "Total deduction: "+totalDeduction+"\n"
                                        + "--------------------------------------------\n";
                                String totalNetpay = "Net pay: "+netpay+"\n";
                                String footer = "Prepared by: "+adminName;

                                Text text1 = new Text(companyName).setFont(boldFont).setFontSize(11);
                                Text text2 = new Text(payslipText).setFont(font).setFontSize(10);
                                Text text3 = new Text(period).setFont(font).setFontSize(10);
                                Text text4 = new Text(name).setFont(boldFont).setFontSize(13);
                                Text text5 = new Text(grosspayDetails).setFont(font).setFontSize(10);
                                Text text6 = new Text(deductionDetails).setFont(font).setFontSize(10);
                                Text text7 = new Text(totalNetpay).setFont(boldFont).setFontSize(10);
                                Text text8 = new Text(footer).setFont(font).setFontSize(10);

                                Paragraph paragraph1 = new Paragraph()
                                        .add(text1)
                                        .add(text2)
                                        .add(text3)
                                        .add(text4)
                                        .add(text5)
                                        .add(text6)
                                        .add(text7)
                                        .add(text8);

                                document.add(paragraph1);

                                // Closing the document
                                document.close();
                                System.out.println("Paragraph added");

                                // for merging pdf files after generating payslips
                                if(y == 0){
                                    // Creating a PdfWriter
                                    writer = new PdfWriter(path+"\\Merged "+ps+"-"+pe+".pdf");

                                    // Creating a PdfDocument
                                    pdf = new PdfDocument(writer);

                                    // Creating a Document
                                    document = new Document(pdf);

                                    font = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);
                                    boldFont = PdfFontFactory.createFont(FontConstants.TIMES_BOLD);

                                    companyName = "JE PRIME CONSTRUCTION\n";
                                    payslipText = "      Payslip\n";
                                    period = " " +ps+" - "+pe+"\n";
                                    name =     "     "+empName+"\n";

                                    grosspayDetails =  "-------------------------------------------\n"
                                            + "No. of hours worked: "+hoursWorked+"\n"
                                            + "No. of hous overtime: "+hoursOvertime+"\n"
                                            + "Holiday pay: "+holidayPay+"\n"
                                            + "Bonuses: "+bonuses+"\n"
                                            + "Basic salary: "+ dailyRate+"\n"
                                            + "Hourly rate: "+hourlyRate+"\n"
                                            + "--------------------------------------------\n"
                                            + "Total gross pay: "+grossPay+"\n"
                                            + "--------------------------------------------\n";
                                    deductionDetails = "Deductions:\n"
                                            + "SSS: "+sss+"\n"
                                            + "Pagibig: "+pagibig+"\n"
                                            + "Philhealth: "+philhealth+"\n"
                                            + "Vale: "+vale+"\n"
                                            + "Uniform fee: "+uniform+"\n"
                                            + "--------------------------------------------\n"
                                            + "Total deduction: "+totalDeduction+"\n"
                                            + "--------------------------------------------\n";
                                    totalNetpay = "Net pay: "+netpay+"\n";
                                    footer = "Prepared by: "+adminName;

                                    text1 = new Text(companyName).setFont(boldFont).setFontSize(11);
                                    text2 = new Text(payslipText).setFont(font).setFontSize(10);
                                    text3 = new Text(period).setFont(font).setFontSize(10);
                                    text4 = new Text(name).setFont(boldFont).setFontSize(13);
                                    text5 = new Text(grosspayDetails).setFont(font).setFontSize(10);
                                    text6 = new Text(deductionDetails).setFont(font).setFontSize(10);
                                    text7 = new Text(totalNetpay).setFont(boldFont).setFontSize(10);
                                    text8 = new Text(footer).setFont(font).setFontSize(10);

                                    paragraph1 = new Paragraph()
                                            .add(text1)
                                            .add(text2)
                                            .add(text3)
                                            .add(text4)
                                            .add(text5)
                                            .add(text6)
                                            .add(text7)
                                            .add(text8);

                                    document.add(paragraph1);

                                        // Closing the document
                                        document.close();             
                                        System.out.println("Paragraph added");
                                }
                                else if(y > 0){
                                    File file1 = new File(path+"\\Merged "+ps+"-"+pe+".pdf");
                                    File file2 = new File(path+"\\"+empName+" "+ps+"-"+pe+".pdf");

                                    //Instantiating PDFMergerUtility class
                                    PDFMergerUtility PDFmerger = new PDFMergerUtility();

                                    //Setting the destination file
                                    PDFmerger.setDestinationFileName(path+"\\Merged "+ps+"-"+pe+".pdf");

                                    //adding the source files
                                    PDFmerger.addSource(file1);
                                    PDFmerger.addSource(file2);

                                    //Merging the two documents
                                    PDFmerger.mergeDocuments();
                                    System.out.println("Documents merged");
                                }

                            }catch(FileNotFoundException e){
                                JOptionPane.showMessageDialog(null,e);
                            }
                            catch (IOException ex) {
                                JOptionPane.showMessageDialog(null, ex);
                            }
                        y++;        
                        }
                        pdfViewer.removeAll();
                        openPdf(path+"\\Merged "+periodStart+"-"+periodEnd+".pdf");
                        JOptionPane.showMessageDialog(null, "Payslip Generated");

                        try{
                            // Retrieve admin_id and admin_name that will match to the inputted username in login form
                            String query3 = "SELECT * FROM `accounts` WHERE id=?";
                            pst = con.prepareStatement(query3);
                            pst.setString(1, lblAdminId.getText());
                            rs = pst.executeQuery();

                            if(rs.next()){
                                // Get current time and date
                                Calendar cal = new GregorianCalendar();
                                int month = cal.get(Calendar.MONTH);
                                int year = cal.get(Calendar.YEAR);
                                int day = cal.get(Calendar.DAY_OF_MONTH);

                                int second = cal.get(Calendar.SECOND);
                                int minute = cal.get(Calendar.MINUTE);
                                int hour = cal.get(Calendar.HOUR);

                                // retrieved data
                                String adminId = rs.getString("id");
                                String adminName1 = rs.getString("name");
                                String date = ((month+1)+"/"+day+"/"+year);
                                String time = ((hour+00)+":"+(minute+00)+":"+(second+00));

                                // for description
                                String desc = "Payslip generated for "+periodStart+" - "+periodEnd;

                                // Insert retrieved data into account login
                                String query4 = "INSERT INTO `account_login`(`admin_id`, `admin_name`, `login_date`, `login_time`, `description`) VALUES (?, ?, ?, ?, ?)";
                                pst = con.prepareStatement(query4);
                                pst.setString(1, adminId);
                                pst.setString(2, adminName1);
                                pst.setString(3, date);
                                pst.setString(4, time);
                                pst.setString(5, desc);

                                pst.execute();
                            }
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e);
                        }        
                    }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No payroll exists for the selected payroll period.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select payroll period");
        }
    }//GEN-LAST:event_btnGeneratePayslipActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGeneratePayslip;
    private javax.swing.JButton btnGenerateSalaryStatement;
    private com.toedter.calendar.JDateChooser dcPeriodEnd;
    private com.toedter.calendar.JDateChooser dcPeriodStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblAdminId;
    private javax.swing.JPanel pdfViewer;
    // End of variables declaration//GEN-END:variables
}
